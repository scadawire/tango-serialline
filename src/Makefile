#=============================================================================
#
# file :        Makefile
#
# description : Include for the Serial class.
#
# project :     Makefile to generate a Tango server
#
# $Author: pascal_verdier $
#
# $Revision: 1.6 $
#
# $Log: not supported by cvs2svn $
# Revision 1.5  2005/03/22 08:02:30  taurel
# - Ported to Tango V5
# - Added small changed from AG in the Windows part (One Sleep to calm down thing and
#   some management of 0 character)
#
# Revision 1.1.1.1  2004/10/14 13:10:39  penel
# Initial Import
#
# Revision 1.1  2004/09/29 06:24:30  penel
# Initial revision
# Revision 1.3  2004/10/22 14:17:01  xavela
# xavier : only in win32 part, possibility to open a port COM higher than 9.
# changed TANGO_ROOT_WIN32 by SOLEIL_ROOT in the makefile.vc.
#
# Revision 1.2  2004/06/30 09:22:48  xavela
# xavier : ajout de la methode dev_ser_read_nretry()
# pour la partie win32
#
#
# copyleft :    European Synchrotron Radiation Facility
#               BP 220, Grenoble 38043
#               FRANCE
#
#=============================================================================
#  		This file is generated by POGO
#	(Program Obviously used to Generate tango Object)
#
#         (c) - Software Engineering Group - ESRF
#=============================================================================
#

ifdef _solaris
CC = CC
#BIN_DIR = solaris9_CC
BIN_DIR=$(shell /csadmin/common/scripts/get_os)_CC
endif

ifdef linux
CC = c++
AR = ar
#BIN_DIR = suse82
BIN_DIR=$(shell /csadmin/common/scripts/get_os)
endif

TANGO_HOME   =  /segfs/tango/release
CLASSES_HOME = $(TANGO_HOME)/cppserver
INCLUDE_DIRS =  -I. \
		-I$(TANGO_HOME)/$(BIN_DIR)/include\
		-I$(CLASSES_HOME)/include
		
LIB_DIRS     =  -L $(TANGO_HOME)/$(BIN_DIR)/lib \
		-L $(CLASSES_HOME)/$(BIN_DIR)/lib

TARGET_LIB = $(TANGO_HOME)/cppserver/lib/$(BIN_DIR)/libtgclasses.a

ifdef _solaris
CXXFLAGS =  -mt -D_PTHREADS $(INCLUDE_DIRS)
LFLAGS =  -g $(LIB_DIRS)  		\
				-ltango\
				-llog4tango		\
				-lomniORB4 		\
				-lomniDynamic4	\
				-lomnithread	\
				-lpthread		\
				-lCOS4			\
				-ltgclasses		\
				-lposix4 -lsocket -lnsl
endif

ifdef linux
CXXFLAGS =  -g -D_REENTRANT $(INCLUDE_DIRS)
LFLAGS =  -g $(LIB_DIRS)  		\
				-ltango\
				-llog4tango		\
				-lomniORB4 		\
				-lomniDynamic4	\
				-lomnithread	\
				-lCOS4			\
				-ltgclasses		\
				-ldl -lpthread 
endif




CLASS =	Serial

SVC_OBJS = 	main.o	\
		ClassFactory.o	\
		$(CLASS)Class.o	\
		$(CLASS)StateMachine.o \
		$(CLASS).o

SVC_INC = 	$(CLASS)Class.h \
			$(CLASS).h


%.o: %.cpp $(SVC_INC)
	$(CC) $(CXXFLAGS) -c $<

class:	$(CLASS)

			
all: $(CLASS)

	
$(CLASS):	$(SVC_OBJS)
	$(CC) $(SVC_OBJS) -o $(CLASS) $(LFLAGS)

clean:
	rm -f *.o  core

clobber:
	rm -f *.o $(CLASS) TST/read_pos TST/read_attr core
	
install:
	cp $(CLASS) $(TANGO_HOME)/bin/$(BIN_DIR)

lib:
	@make no_debug=1
	cp *.h $(CLASSES_HOME)/include
	ar rv $(TARGET_LIB)		$(CLASS).o
	ar rv $(TARGET_LIB)		$(CLASS)Class.o
	ar rv $(TARGET_LIB)		$(CLASS)StateMachine.o
	ident  $(TARGET_LIB)
